import { useState, useEffect } from 'react';
import SEO from '@/components/SEO';
import StructuredData from '@/components/StructuredData';
import Analytics from '@/components/Analytics';
import WishForm from '@/components/WishForm';
import PaymentSection from '@/components/PaymentSection';
import PaymentMethods from '@/components/PaymentMethods';
import RulesSection from '@/components/RulesSection';

const Index = () => {
  const [wish, setWish] = useState('');
  const [showPayment, setShowPayment] = useState(false);
  const [selectedAmount, setSelectedAmount] = useState<number | null>(null);
  const [wishIntensity, setWishIntensity] = useState(5);
  const [showConfetti, setShowConfetti] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ —Å—É–º–º—ã –ø–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏
  const getAmountFromIntensity = (intensity: number) => intensity * 100;
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ü–≤–µ—Ç–∞ –ø–æ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç–∏ (–æ—Ç —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω–æ–≥–æ –¥–æ —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω–æ–≥–æ)
  const getColorFromIntensity = (intensity: number) => {
    const lightGreen = { r: 144, g: 238, b: 144 }; // —Å–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π
    const darkGreen = { r: 0, g: 100, b: 0 }; // —Ç–µ–º–Ω–æ-–∑–µ–ª–µ–Ω—ã–π
    
    const ratio = (intensity - 1) / 9; // –Ω–æ—Ä–º–∞–ª–∏–∑—É–µ–º –æ—Ç 0 –¥–æ 1
    
    const r = Math.round(lightGreen.r + (darkGreen.r - lightGreen.r) * ratio);
    const g = Math.round(lightGreen.g + (darkGreen.g - lightGreen.g) * ratio);
    const b = Math.round(lightGreen.b + (darkGreen.b - lightGreen.b) * ratio);
    
    return `rgb(${r}, ${g}, ${b})`;
  };

  const handlePayment = () => {
    setShowConfetti(true);
    
    // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è –≤ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ
    const amount = getAmountFromIntensity(wishIntensity);
    if (window.trackWish) {
      window.trackWish(amount, wishIntensity);
    }
  };

  useEffect(() => {
    let confettiInterval: NodeJS.Timeout;
    
    if (showConfetti) {
      const colors = ['#ff6b6b', '#4ecdc4', '#45b7d1', '#96ceb4', '#feca57', '#ff9ff3', '#54a0ff', '#5f27cd', '#00d2d3', '#ff9f43', '#10ac84', '#ee5a6f', '#c44569', '#786fa6', '#f8b500', '#a55eea', '#26de81', '#fd79a8', '#fdcb6e', '#e17055'];
      const shapes = ['circle', 'square', 'star', 'heart', 'diamond'];
      
      const createConfetti = () => {
        const confettiPiece = document.createElement('div');
        const size = Math.random() * 12 + 6; // –æ—Ç 6px –¥–æ 18px
        const color = colors[Math.floor(Math.random() * colors.length)];
        const shape = shapes[Math.floor(Math.random() * shapes.length)];
        
        confettiPiece.style.position = 'fixed';
        confettiPiece.style.width = size + 'px';
        confettiPiece.style.height = size + 'px';
        confettiPiece.style.left = Math.random() * 100 + '%';
        confettiPiece.style.top = '-30px';
        confettiPiece.style.zIndex = '1000';
        confettiPiece.style.pointerEvents = 'none';
        
        // –†–∞–∑–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã
        switch(shape) {
          case 'circle':
            confettiPiece.style.backgroundColor = color;
            confettiPiece.style.borderRadius = '50%';
            break;
          case 'square':
            confettiPiece.style.backgroundColor = color;
            confettiPiece.style.borderRadius = '0';
            break;
          case 'star':
            confettiPiece.innerHTML = '‚≠ê';
            confettiPiece.style.fontSize = size + 'px';
            confettiPiece.style.lineHeight = '1';
            break;
          case 'heart':
            confettiPiece.innerHTML = 'üíñ';
            confettiPiece.style.fontSize = size + 'px';
            confettiPiece.style.lineHeight = '1';
            break;
          case 'diamond':
            confettiPiece.innerHTML = 'üíé';
            confettiPiece.style.fontSize = size + 'px';
            confettiPiece.style.lineHeight = '1';
            break;
        }
        
        // –†–∞–∑–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –ø–∞–¥–µ–Ω–∏—è
        const duration = Math.random() * 6 + 2; // –æ—Ç 2s –¥–æ 8s
        const rotationSpeed = Math.random() * 1440 + 360; // –æ—Ç 360¬∞ –¥–æ 1800¬∞
        const horizontalDrift = (Math.random() - 0.5) * 200; // –±–æ–∫–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
        
        // –°–æ–∑–¥–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
        const animationName = `confetti-fall-${Date.now()}-${Math.random()}`;
        const keyframes = `
          @keyframes ${animationName} {
            0% {
              transform: translateY(-30px) translateX(0px) rotate(0deg);
              opacity: 1;
            }
            100% {
              transform: translateY(100vh) translateX(${horizontalDrift}px) rotate(${rotationSpeed}deg);
              opacity: 0.2;
            }
          }
        `;
        
        // –î–æ–±–∞–≤–ª—è–µ–º keyframes –≤ —Å—Ç–∏–ª–∏
        const style = document.createElement('style');
        style.textContent = keyframes;
        document.head.appendChild(style);
        
        confettiPiece.style.animation = `${animationName} ${duration}s ease-in infinite`;
        
        document.body.appendChild(confettiPiece);
        
        // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –∏ —Å—Ç–∏–ª–∏ –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
        setTimeout(() => {
          if (confettiPiece.parentNode) {
            confettiPiece.parentNode.removeChild(confettiPiece);
          }
          if (style.parentNode) {
            style.parentNode.removeChild(style);
          }
        }, duration * 1000);
      };
      
      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ —Å —Ä–∞–∑–Ω–æ–π —á–∞—Å—Ç–æ—Ç–æ–π
      const createBurst = () => {
        // –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É –∏–∑ 3-8 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ä–∞–∑—É
        const burstSize = Math.random() * 6 + 3;
        for (let i = 0; i < burstSize; i++) {
          setTimeout(createConfetti, i * 50);
        }
      };
      
      // –°–æ–∑–¥–∞–µ–º –≤–∑—Ä—ã–≤—ã –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –∫–∞–∂–¥—ã–µ 200-500–º—Å
      const scheduleNext = () => {
        const delay = Math.random() * 300 + 200;
        setTimeout(() => {
          if (showConfetti) {
            createBurst();
            scheduleNext();
          }
        }, delay);
      };
      
      scheduleNext();
    }
    
    return () => {
      if (confettiInterval) {
        clearInterval(confettiInterval);
      }
    };
  }, [showConfetti]);

  const handleWishSubmit = () => {
    if (wish.trim()) {
      setShowPayment(true);
    }
  };

  return (
    <>
      {/* SEO –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã */}
      <SEO 
        title="ü™Ñ –°–∞–π—Ç –∂–µ–ª–∞–Ω–∏–π - –ò—Å–ø–æ–ª–Ω–∏ —Å–≤–æ—ë –∂–µ–ª–∞–Ω–∏–µ | —Å–∞–π—Ç-–∂–µ–ª–∞–Ω–∏–π.—Ä—Ñ"
        description="–ó–∞–≥–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–Ω–∏–µ –∏ –ø–æ–≤–µ—Ä—å—Ç–µ –≤ –µ–≥–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –≤–∫–ª–∞–¥ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–ø–ª–∞—Ç—É. –¢—ã—Å—è—á–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∂–µ–ª–∞–Ω–∏–π –Ω–∞ —Å–∞–π—Ç-–∂–µ–ª–∞–Ω–∏–π.—Ä—Ñ"
        keywords="–∂–µ–ª–∞–Ω–∏—è, –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∂–µ–ª–∞–Ω–∏–π, –∑–∞–≥–∞–¥–∞—Ç—å –∂–µ–ª–∞–Ω–∏–µ, –º–∞–≥–∏—è, —ç–Ω–µ—Ä–≥–∏—è, –∏—Å–ø–æ–ª–Ω–∏—Ç—å –º–µ—á—Ç—É, —Å–∞–π—Ç –∂–µ–ª–∞–Ω–∏–π"
        canonical="https://—Å–∞–π—Ç-–∂–µ–ª–∞–Ω–∏–π.—Ä—Ñ"
      />
      <StructuredData 
        type="WebSite"
        name="–°–∞–π—Ç –∂–µ–ª–∞–Ω–∏–π"
        description="–ó–∞–≥–∞–¥–∞–π—Ç–µ –∂–µ–ª–∞–Ω–∏–µ –∏ –ø–æ–≤–µ—Ä—å—Ç–µ –≤ –µ–≥–æ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–µ. –≠–Ω–µ—Ä–≥–µ—Ç–∏—á–µ—Å–∫–∏–π –≤–∫–ª–∞–¥ —á–µ—Ä–µ–∑ –±–µ–∑–æ–ø–∞—Å–Ω—É—é –æ–ø–ª–∞—Ç—É."
        url="https://—Å–∞–π—Ç-–∂–µ–ª–∞–Ω–∏–π.—Ä—Ñ"
      />
      <Analytics 
        googleAnalyticsId="G-XXXXXXXXXX"
        yandexMetrikaId="12345678"
        environment="production"
      />
      
      <style>{`
        /* –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ –±—É–¥—É—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ */
      `}</style>

      <div className="min-h-screen bg-white">
        {/* Hero Section */}
        <WishForm 
          wish={wish}
          setWish={setWish}
          onSubmit={handleWishSubmit}
          showPayment={showPayment}
          paymentSection={
            <PaymentSection
              wish={wish}
              wishIntensity={wishIntensity}
              setWishIntensity={setWishIntensity}
              setSelectedAmount={setSelectedAmount}
              getAmountFromIntensity={getAmountFromIntensity}
              getColorFromIntensity={getColorFromIntensity}
            >
              <PaymentMethods
                getAmountFromIntensity={getAmountFromIntensity}
                wishIntensity={wishIntensity}
                onPaymentComplete={handlePayment}
              />
            </PaymentSection>
          }
        />

        {/* Rules Section */}
        <RulesSection />

        {/* Footer */}
        <footer className="border-t border-gray-200 py-8">
          <div className="max-w-4xl mx-auto px-4 text-center">
            <p className="text-gray-600">
              ¬© 2024 –°–∞–π—Ç –ñ–µ–ª–∞–Ω–∏–π. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
            </p>
          </div>
        </footer>
      </div>
    </>
  );
};

export default Index;