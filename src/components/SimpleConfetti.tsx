import { useEffect } from 'react';

interface SimpleConfettiProps {
  isActive: boolean;
}

const SimpleConfetti = ({ isActive }: SimpleConfettiProps) => {
  useEffect(() => {
    console.log('SimpleConfetti useEffect –≤—ã–∑–≤–∞–Ω, isActive:', isActive);
    
    if (!isActive) {
      console.log('–ö–æ–Ω—Ñ–µ—Ç—Ç–∏ –Ω–µ –∞–∫—Ç–∏–≤–Ω–æ, –≤—ã—Ö–æ–¥–∏–º');
      return;
    }

    console.log('–ó–∞–ø—É—Å–∫–∞–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ –∫–æ–Ω—Ñ–µ—Ç—Ç–∏!');

    let intervalId: NodeJS.Timeout;

    // 25+ —è—Ä–∫–∏—Ö —Ü–≤–µ—Ç–æ–≤
    const colors = [
      '#FF6B6B', '#4ECDC4', '#45B7D1', '#96CEB4', '#FECA57',
      '#FF9FF3', '#54A0FF', '#5F27CD', '#00D2D3', '#FF9F43',
      '#10AC84', '#EE5A6F', '#C44569', '#786FA6', '#F8B500',
      '#A55EEA', '#26DE81', '#FD79A8', '#FDCB6E', '#E17055',
      '#FFD700', '#FF69B4', '#00CED1', '#32CD32', '#FF4500',
      '#DA70D6', '#87CEEB', '#FFA500', '#FF1493', '#00FF7F'
    ];

    // –†–∞–∑–Ω—ã–µ —Ñ–∏–≥—É—Ä—ã
    const shapes = [
      { type: 'circle', emoji: null },
      { type: 'square', emoji: null },
      { type: 'emoji', emoji: '‚≠ê' },
      { type: 'emoji', emoji: 'üíñ' },
      { type: 'emoji', emoji: 'üíé' },
      { type: 'emoji', emoji: '‚ú®' },
      { type: 'emoji', emoji: 'üéâ' },
      { type: 'emoji', emoji: 'üåü' },
      { type: 'emoji', emoji: 'üéä' },
      { type: 'emoji', emoji: 'üí´' }
    ];

    const createConfetti = () => {
      const confetti = document.createElement('div');
      
      // –°–ª—É—á–∞–π–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
      const shape = shapes[Math.floor(Math.random() * shapes.length)];
      const color = colors[Math.floor(Math.random() * colors.length)];
      const size = Math.random() * 20 + 10; // –æ—Ç 10px –¥–æ 30px
      const startX = Math.random() * 100;
      const fallDuration = Math.random() * 8000 + 6000; // –æ—Ç 6 –¥–æ 14 —Å–µ–∫—É–Ω–¥ (–º–µ–¥–ª–µ–Ω–Ω–æ!)
      const rotationSpeed = Math.random() * 720 + 360; // –æ—Ç 360¬∞ –¥–æ 1080¬∞
      const horizontalDrift = (Math.random() - 0.5) * 300; // –±–æ–∫–æ–≤–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ
      
      // –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏
      confetti.style.position = 'fixed';
      confetti.style.left = startX + '%';
      confetti.style.top = '-50px';
      confetti.style.width = size + 'px';
      confetti.style.height = size + 'px';
      confetti.style.zIndex = '10000';
      confetti.style.pointerEvents = 'none';
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–æ—Ä–º—É
      if (shape.type === 'circle') {
        confetti.style.backgroundColor = color;
        confetti.style.borderRadius = '50%';
        confetti.style.boxShadow = `0 0 10px ${color}60`;
      } else if (shape.type === 'square') {
        confetti.style.backgroundColor = color;
        confetti.style.borderRadius = '3px';
        confetti.style.boxShadow = `0 0 10px ${color}60`;
      } else if (shape.type === 'emoji') {
        confetti.innerHTML = shape.emoji || '‚≠ê';
        confetti.style.fontSize = size + 'px';
        confetti.style.lineHeight = '1';
        confetti.style.textShadow = '0 0 15px rgba(255,255,255,0.8)';
        confetti.style.display = 'flex';
        confetti.style.alignItems = 'center';
        confetti.style.justifyContent = 'center';
      }
      
      // –°–æ–∑–¥–∞—ë–º —É–Ω–∏–∫–∞–ª—å–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é –¥–ª—è –∫–∞–∂–¥–æ–π —á–∞—Å—Ç–∏—Ü—ã
      const animationId = `confetti-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;
      const swayAmount = Math.random() * 100 + 50; // –∫–∞—á–∞–Ω–∏–µ –∏–∑ —Å—Ç–æ—Ä–æ–Ω—ã –≤ —Å—Ç–æ—Ä–æ–Ω—É
      
      const keyframes = `
        @keyframes ${animationId} {
          0% {
            transform: translateY(-50px) translateX(0px) rotate(0deg);
            opacity: 1;
          }
          20% {
            transform: translateY(20vh) translateX(${swayAmount * 0.3}px) rotate(${rotationSpeed * 0.2}deg);
            opacity: 0.95;
          }
          40% {
            transform: translateY(40vh) translateX(${-swayAmount * 0.5}px) rotate(${rotationSpeed * 0.4}deg);
            opacity: 0.9;
          }
          60% {
            transform: translateY(60vh) translateX(${swayAmount * 0.7}px) rotate(${rotationSpeed * 0.6}deg);
            opacity: 0.8;
          }
          80% {
            transform: translateY(80vh) translateX(${-swayAmount * 0.3}px) rotate(${rotationSpeed * 0.8}deg);
            opacity: 0.6;
          }
          100% {
            transform: translateY(110vh) translateX(${horizontalDrift}px) rotate(${rotationSpeed}deg);
            opacity: 0;
          }
        }
      `;
      
      // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∏–ª–∏
      const styleElement = document.createElement('style');
      styleElement.textContent = keyframes;
      document.head.appendChild(styleElement);
      
      // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é —Å –º–µ–¥–ª–µ–Ω–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é
      confetti.style.animation = `${animationId} ${fallDuration}ms cubic-bezier(0.25, 0.46, 0.45, 0.94) forwards`;
      
      document.body.appendChild(confetti);
      
      // –£–¥–∞–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç –ø–æ—Å–ª–µ –∞–Ω–∏–º–∞—Ü–∏–∏
      setTimeout(() => {
        if (confetti.parentNode) {
          confetti.parentNode.removeChild(confetti);
        }
        if (styleElement.parentNode) {
          styleElement.parentNode.removeChild(styleElement);
        }
      }, fallDuration + 1000);
    };

    const createBurst = () => {
      // –°–æ–∑–¥–∞—ë–º –≥—Ä—É–ø–ø—É –∏–∑ 4-8 —á–∞—Å—Ç–∏—Ü
      const burstSize = Math.random() * 5 + 4;
      
      for (let i = 0; i < burstSize; i++) {
        setTimeout(() => {
          createConfetti();
        }, i * Math.random() * 200);
      }
    };

    // –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ñ–µ—Ç—Ç–∏ —Å —Ä–∞–∑–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
    intervalId = setInterval(() => {
      createBurst();
    }, Math.random() * 600 + 400); // –æ—Ç 400–º—Å –¥–æ 1000–º—Å –º–µ–∂–¥—É –≤–∑—Ä—ã–≤–∞–º–∏
    
    // –°—Ä–∞–∑—É —Å–æ–∑–¥–∞—ë–º –ø–µ—Ä–≤—É—é –≤–æ–ª–Ω—É
    createBurst();

    return () => {
      console.log('–û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –∫–æ–Ω—Ñ–µ—Ç—Ç–∏');
      if (intervalId) {
        clearInterval(intervalId);
      }
    };
  }, [isActive]);

  return null;
};

export default SimpleConfetti;