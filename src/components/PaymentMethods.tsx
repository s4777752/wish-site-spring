import React, { useEffect } from 'react';
import { Button } from '@/components/ui/button';
import { sendAffirmationEmail } from '@/utils/emailService';

interface PaymentMethodsProps {
  getAmountFromIntensity: (intensity: number) => number;
  wishIntensity: number;
  wish: string;
  onPaymentComplete: () => void;
  deliveryMethod?: 'whatsapp' | 'email' | 'both';
  onUserDataChange?: (email: string, phone: string) => void;
}

declare global {
  interface Window {
    cpay: any;
  }
}



const PaymentMethods = ({ getAmountFromIntensity, wishIntensity, wish, onPaymentComplete, onUserDataChange }: PaymentMethodsProps) => {
  useEffect(() => {
    // –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç PayMaster
    const script = document.createElement('script');
    script.src = 'https://paymaster.ru/cpay/sdk/payment-widget.js';
    script.async = true;
    document.head.appendChild(script);



    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
    const handlePaymentClick = () => {
      if (window.cpay) {
        const paymentWidget = new window.cpay.PaymentWidget();
        paymentWidget.init({
          "merchantId": "bc70f8f2-d8d3-49f1-9ec2-8f41857fc244",
          "invoice": {"description": "SAIT ZHELANII"},
          "amount": {"currency": "RUB", "value": 0},
          "receipt": null,
          "paymentForm": {
            "theme": "light",
            "primaryColor": "#58bfe8",
            "productCard": {
              "title": "SAIT ZHELANII",
              "description": "–°–ê–ô–¢ –ñ–ï–õ–ê–ù–ò–ô",
              "imageUrl": null
            },
            "fields": [
              {
                "type": "input",
                "name": "customerEmail",
                "label": "E-mail",
                "hint": null,
                "required": true,
                "selectOptions": null,
                "additionalAmount": null
              },
              {
                "type": "input",
                "name": "amount",
                "label": "–°—É–º–º–∞",
                "hint": null,
                "required": true,
                "selectOptions": null,
                "additionalAmount": null
              }
            ]
          }
        });
      }
    };

    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫—Ä–∏–ø—Ç–∞
    script.onload = () => {
      const checkAndAddListener = () => {
        const button = document.querySelector('[btn-pay-98dv40hx5t0bkkyj4d7uttgy6]');
        if (button && window.cpay) {
          button.addEventListener('click', handlePaymentClick);
          console.log('PayMaster –∫–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
        } else {
          setTimeout(checkAndAddListener, 100);
        }
      };
      checkAndAddListener();
    };

    return () => {
      // –û—á–∏—â–∞–µ–º –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
      const existingScript = document.querySelector('script[src*="paymaster.ru"]');
      if (existingScript) {
        document.head.removeChild(existingScript);
      }

    };
  }, []);

  return (
    <div className="space-y-6">
      {/* QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã */}
      <div className="text-center space-y-4">
        <h3 className="text-lg font-semibold text-gray-800">–î–ª—è –æ–ø–ª–∞—Ç—ã –æ—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR –∫–æ–¥</h3>
        <div className="bg-white p-4 rounded-lg border-2 border-gray-200 inline-block shadow-sm">
          <img 
            src="https://cdn.poehali.dev/files/f8b182d3-f618-41a7-be07-1c7313360372.jpg" 
            alt="QR –∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã" 
            className="w-48 h-48 mx-auto"
          />
        </div>
        <div className="text-center space-y-2">
          <div className="font-semibold text-gray-800">–¢-–ë–∞–Ω–∫ ‚ö°</div>
          <div className="text-sm text-gray-600 space-y-1">
            <div>1. –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥</div>
            <div>2. –ò–ü –ü–∞–∫–ª–∏–Ω –°–í</div>
            <div>3. –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É</div>
          </div>
        </div>

      </div>

      {/* PayMaster –∫–Ω–æ–ø–∫–∞ –æ–ø–ª–∞—Ç—ã */}
      <div className="text-center">
        <button 
          btn-pay-98dv40hx5t0bkkyj4d7uttgy6
          onClick={(e) => {
            e.preventDefault();
            console.log('–ö–ª–∏–∫ –ø–æ –∫–Ω–æ–ø–∫–µ PayMaster');
            const amount = getAmountFromIntensity(wishIntensity);
            if (window.cpay) {
              const paymentWidget = new window.cpay.PaymentWidget();
              paymentWidget.init({
                "merchantId": "bc70f8f2-d8d3-49f1-9ec2-8f41857fc244",
                "invoice": {"description": "SAIT ZHELANII"},
                "amount": {"currency": "RUB", "value": amount, "fixed": true},
                "receipt": null,
                "paymentForm": {
                  "theme": "light",
                  "primaryColor": "#6366f1",
                  "productCard": {
                    "title": "–°–ê–ô–¢ –ñ–ï–õ–ê–ù–ò–ô",
                    "description": `–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ –∂–µ–ª–∞–Ω–∏—è "${wish}" —Å —Å–∏–ª–æ–π ${wishIntensity}/10`,
                    "imageUrl": null
                  },
                  "fields": [
                    {
                      "type": "input",
                      "name": "customerEmail",
                      "label": "E-mail",
                      "hint": null,
                      "required": true,
                      "selectOptions": null,
                      "additionalAmount": null
                    },
                    {
                      "type": "input",
                      "name": "customerName",
                      "label": "–ò–º—è",
                      "hint": null,
                      "required": true,
                      "selectOptions": null,
                      "additionalAmount": null
                    }
                  ]
                },
                "callbacks": {
                  "onSuccess": async (paymentData) => {
                    console.log('–û–ø–ª–∞—Ç–∞ —É—Å–ø–µ—à–Ω–∞:', paymentData);
                    
                    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã –æ–ø–ª–∞—Ç—ã
                    const email = paymentData.customerData?.customerEmail || 'user@example.com';
                    const name = paymentData.customerData?.customerName || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
                    
                    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —Å –¥–æ–∫—É–º–µ–Ω—Ç–æ–º –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏
                    try {
                      const orderNumber = `WM${Date.now()}`;
                      const timestamp = new Date().toLocaleString('ru-RU');
                      
                      await sendAffirmationEmail({
                        name: name,
                        email: email,
                        wish: wish,
                        amount: amount,
                        orderNumber: orderNumber,
                        timestamp: timestamp
                      });
                      
                      console.log('–î–æ–∫—É–º–µ–Ω—Ç –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞:', email);
                      
                      // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                      if (onUserDataChange) {
                        onUserDataChange(email, '');
                      }
                      
                    } catch (error) {
                      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏:', error);
                    }
                    
                    // –í—ã–∑—ã–≤–∞–µ–º callback —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã
                    if (onPaymentComplete) {
                      onPaymentComplete();
                    }
                  },
                  "onError": (error) => {
                    console.error('–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã:', error);
                  }
                }
              });
            } else {
              console.error('PayMaster SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
          }}
          className="bg-gradient-to-r from-indigo-500 to-purple-600 hover:from-indigo-600 hover:to-purple-700 text-white font-bold py-4 px-8 rounded-xl shadow-lg transform hover:scale-105 transition-all duration-200 text-lg"
        >
          –û–ø–ª–∞—Ç–∏—Ç—å
        </button>
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏ */}
      <Button 
        onClick={() => {
          const documentData = {
            wish: wish,
            intensity: wishIntensity,
            amount: getAmountFromIntensity(wishIntensity),
            email: 'user@example.com',
            userName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            documentId: `WD${Date.now()}${Math.random().toString(36).substring(2, 7).toUpperCase()}`
          };
          
          // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
          import('../components/DocumentGenerator').then(({ generateAndDownloadDocument }) => {
            generateAndDownloadDocument(documentData);
          });
        }}
        className="w-full bg-green-500 hover:bg-green-600 text-white font-semibold py-4 px-6 transition-colors duration-200 text-lg hidden"
      >
        üìÑ –°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç –∞—Ñ—Ñ–∏—Ä–º–∞—Ü–∏–∏
      </Button>
    </div>
  );
};

export default PaymentMethods;